import type { SidebarsConfig } from '@docusaurus/plugin-content-docs';
import type { SidebarItemCategoryConfig, SidebarItemConfig, SidebarItemLink } from '@docusaurus/plugin-content-docs/lib/sidebars/types';
import webConnectorsJson from './theoplayer/connectors/web/_category_.json';
import androidConnectorsJson from './theoplayer/connectors/android/_category_.json';
import iosConnectorsJson from './theoplayer/connectors/ios/_category_.json';

/**
 * Creating a sidebar enables you to:
 - create an ordered group of docs
 - render a sidebar for each doc of that group
 - provide next/previous navigation

 The sidebars can be generated from the filesystem, or explicitly defined here.

 Create as many sidebars as you want.
 */
const sidebars: SidebarsConfig = {
  web: [
    'index',
    gettingStartedItem({
      link: { type: 'doc', id: 'getting-started/sdks/web/getting-started' },
      items: [
        { type: 'autogenerated', dirName: 'getting-started/01-sdks/01-web' },
        {
          type: 'category',
          label: 'LG webOS',
          customProps: {
            icon: 'üì∫',
          },
          link: { type: 'doc', id: 'getting-started/sdks/webos/getting-started' },
          items: [{ type: 'autogenerated', dirName: 'getting-started/01-sdks/07-webos' }],
        },
        {
          type: 'category',
          label: 'Samsung Tizen TV',
          customProps: {
            icon: 'üì∫',
          },
          link: { type: 'doc', id: 'getting-started/sdks/tizen/getting-started' },
          items: [{ type: 'autogenerated', dirName: 'getting-started/01-sdks/08-tizen' }],
        },
        { type: 'autogenerated', dirName: 'getting-started/02-frameworks' },
      ],
    }),
    howToGuidesItem({
      link: { type: 'doc', id: 'how-to-guides/index' },
      items: [{ type: 'autogenerated', dirName: 'how-to-guides' }],
    }),
    examplesItem({
      link: { type: 'doc', id: 'examples/index' },
      items: [{ type: 'autogenerated', dirName: 'examples' }],
    }),
    connectorsItem({
      link: { type: 'doc', id: 'connectors/web/index' },
      items: webConnectorsJson.customProps.additionalItems as SidebarItemConfig[],
    }),
    'changelog',
    apiReferencesItem({
      href: 'pathname:///theoplayer/v7/api-reference/web/',
    }),
    knowledgeBaseItem(),
    faqItem(),
  ],
  android: [
    'android/index',
    gettingStartedItem({
      link: { type: 'doc', id: 'getting-started/sdks/android/getting-started' },
      items: [{ type: 'autogenerated', dirName: 'getting-started/01-sdks/02-android' }],
    }),
    howToGuidesItem({
      link: { type: 'doc', id: 'how-to-guides/index' },
      items: [{ type: 'autogenerated', dirName: 'how-to-guides' }],
    }),
    connectorsItem({
      link: { type: 'doc', id: 'connectors/android/index' },
      items: androidConnectorsJson.customProps.additionalItems as SidebarItemConfig[],
    }),
    'changelog',
    apiReferencesItem({
      href: 'pathname:///theoplayer/v7/api-reference/android/',
    }),
    knowledgeBaseItem(),
    faqItem(),
  ],
  ios: [
    'ios/index',
    gettingStartedItem({
      link: { type: 'doc', id: 'getting-started/sdks/ios/getting-started' },
      items: [{ type: 'autogenerated', dirName: 'getting-started/01-sdks/03-ios' }],
    }),
    howToGuidesItem({
      link: { type: 'doc', id: 'how-to-guides/index' },
      items: [{ type: 'autogenerated', dirName: 'how-to-guides' }],
    }),
    connectorsItem({
      link: { type: 'doc', id: 'connectors/android/index' },
      items: iosConnectorsJson.customProps.additionalItems as SidebarItemConfig[],
    }),
    'changelog',
    apiReferencesItem({
      href: 'pathname:///theoplayer/v7/api-reference/ios/',
    }),
    knowledgeBaseItem(),
    faqItem(),
  ],
  chromecast: [
    'chromecast/index',
    gettingStartedItem({
      collapsed: false,
      link: { type: 'doc', id: 'getting-started/sdks/chromecast/getting-started' },
      items: [{ type: 'autogenerated', dirName: 'getting-started/01-sdks/06-chromecast' }],
    }),
    howToGuidesItem({
      link: { type: 'doc', id: 'how-to-guides/index' },
      items: [{ type: 'autogenerated', dirName: 'how-to-guides' }],
    }),
    knowledgeBaseItem(),
    faqItem(),
  ],
  roku: [
    'roku/index',
    gettingStartedItem({
      collapsed: false,
      link: { type: 'doc', id: 'getting-started/sdks/roku/getting-started' },
      items: [{ type: 'autogenerated', dirName: 'getting-started/01-sdks/09-roku' }],
    }),
    howToGuidesItem({
      link: { type: 'doc', id: 'how-to-guides/index' },
      items: [{ type: 'autogenerated', dirName: 'how-to-guides' }],
    }),
    'api-reference/roku',
    knowledgeBaseItem(),
    faqItem(),
  ],
  knowledgeBase: [
    {
      type: 'link',
      label: '¬´ Back',
      href: '/theoplayer/',
    },
    {
      type: 'category',
      label: 'Knowledge base',
      collapsible: false,
      link: { type: 'doc', id: 'knowledge-base/index' },
      items: [{ type: 'autogenerated', dirName: 'knowledge-base' }],
    },
  ],
  faq: [
    {
      type: 'link',
      label: '¬´ Back',
      href: '/theoplayer/',
    },
    {
      type: 'category',
      label: 'FAQ',
      collapsible: false,
      link: { type: 'doc', id: 'faq/index' },
      items: [{ type: 'autogenerated', dirName: 'faq' }],
    },
  ],
};

function gettingStartedItem(config: SidebarItemCategoryConfig): SidebarItemCategoryConfig {
  return {
    type: 'category',
    label: 'Getting started',
    description: 'Set up your first THEOplayer in just a few minutes!',
    customProps: {
      icon: 'üöÄ',
    },
    ...config,
  };
}

function examplesItem(config: SidebarItemCategoryConfig): SidebarItemCategoryConfig {
  return {
    type: 'category',
    label: 'Examples',
    description: 'See the player in action!',
    customProps: {
      icon: 'üõù',
    },
    ...config,
  };
}

function connectorsItem(config: SidebarItemCategoryConfig): SidebarItemCategoryConfig {
  return {
    type: 'category',
    label: 'Connectors',
    description: `Integrate third-party solutions with THEOplayer using our pre-built connectors.`,
    customProps: {
      icon: 'üîå',
    },
    ...config,
  };
}

function howToGuidesItem(config: SidebarItemCategoryConfig): SidebarItemCategoryConfig {
  return {
    type: 'category',
    label: 'How-to guides',
    description: 'Learn how to implement our rich set of features and integrations.',
    customProps: {
      icon: 'üìñ',
    },
    ...config,
  };
}

function apiReferencesItem(config: SidebarItemLink): SidebarItemLink {
  return {
    type: 'link',
    label: 'API references',
    description: 'Discover all properties and functions of THEOplayer.',
    customProps: {
      icon: '*Ô∏è‚É£',
    },
    ...config,
  };
}

function knowledgeBaseItem(): SidebarItemLink {
  return {
    type: 'link',
    label: 'Knowledge base',
    description: 'Learn about topics in the video industry from our experts.',
    customProps: {
      icon: 'üß†',
    },
    href: '/theoplayer/knowledge-base/',
  };
}

function faqItem(): SidebarItemLink {
  return {
    type: 'link',
    label: 'FAQ',
    description: `Answers to common questions we've received from our customers over the years.`,
    customProps: {
      icon: '‚ùî',
    },
    href: '/theoplayer/faq/',
  };
}

export default sidebars;
