import type { SidebarsConfig } from '@docusaurus/plugin-content-docs';
import type { SidebarItemCategoryConfig, SidebarItemConfig, SidebarItemLink } from '@docusaurus/plugin-content-docs/lib/sidebars/types';

const sidebars: SidebarsConfig = {
  web: [
    'web/index',
    gettingStartedCategory({
      collapsed: true,
      link: { type: 'doc', id: 'getting-started/sdks/web/getting-started' },
      items: [
        { type: 'autogenerated', dirName: 'getting-started/01-sdks/01-web' },
        {
          type: 'category',
          label: 'LG webOS',
          customProps: {
            icon: 'üì∫',
          },
          link: { type: 'doc', id: 'getting-started/sdks/webos/getting-started' },
          items: [{ type: 'autogenerated', dirName: 'getting-started/01-sdks/07-webos' }],
        },
        {
          type: 'category',
          label: 'Samsung Tizen TV',
          customProps: {
            icon: 'üì∫',
          },
          link: { type: 'doc', id: 'getting-started/sdks/tizen/getting-started' },
          items: [{ type: 'autogenerated', dirName: 'getting-started/01-sdks/08-tizen' }],
        },
        { type: 'autogenerated', dirName: 'getting-started/02-frameworks' },
      ],
    }),
    howToGuidesCategory({
      link: { type: 'doc', id: 'how-to-guides/index' },
      items: [{ type: 'autogenerated', dirName: 'how-to-guides' }],
    }),
    examplesCategory({
      link: { type: 'doc', id: 'examples/index' },
      items: [{ type: 'autogenerated', dirName: 'examples' }],
    }),
    connectorsCategory({
      link: { type: 'doc', id: 'connectors/web/index' },
      items: webConnectorItems(),
    }),
    'changelog',
    apiReferencesLink({
      href: 'pathname:///theoplayer/v7/api-reference/web/',
    }),
    knowledgeBaseCategory(),
    faqLink(),
  ],
  android: [
    'android/index',
    gettingStartedCategory({
      link: { type: 'doc', id: 'getting-started/sdks/android/getting-started' },
      items: [{ type: 'autogenerated', dirName: 'getting-started/01-sdks/02-android' }],
    }),
    howToGuidesCategory({
      link: { type: 'doc', id: 'how-to-guides/index' },
      items: [{ type: 'autogenerated', dirName: 'how-to-guides' }],
    }),
    connectorsCategory({
      link: { type: 'doc', id: 'connectors/android/index' },
      items: androidConnectorItems(),
    }),
    'changelog',
    apiReferencesLink({
      href: 'pathname:///theoplayer/v7/api-reference/android/',
    }),
    knowledgeBaseCategory(),
    faqLink(),
  ],
  ios: [
    'ios/index',
    gettingStartedCategory({
      link: { type: 'doc', id: 'getting-started/sdks/ios/getting-started' },
      items: [{ type: 'autogenerated', dirName: 'getting-started/01-sdks/03-ios' }],
    }),
    howToGuidesCategory({
      link: { type: 'doc', id: 'how-to-guides/index' },
      items: [{ type: 'autogenerated', dirName: 'how-to-guides' }],
    }),
    connectorsCategory({
      link: { type: 'doc', id: 'connectors/ios/index' },
      items: iosConnectorItems(),
    }),
    'changelog',
    apiReferencesLink({
      href: 'pathname:///theoplayer/v7/api-reference/ios/',
    }),
    knowledgeBaseCategory(),
    faqLink(),
  ],
  'react-native': [
    'react-native/index',
    gettingStartedCategory({
      collapsed: true,
      link: { type: 'doc', id: 'external/react-native-theoplayer/doc/getting-started' },
      items: [{ type: 'autogenerated', dirName: 'external/react-native-theoplayer/doc' }],
    }),
    howToGuidesCategory({
      link: { type: 'doc', id: 'how-to-guides/index' },
      items: [{ type: 'autogenerated', dirName: 'how-to-guides' }],
    }),
    'external/react-native-theoplayer/CHANGELOG',
    apiReferencesLink({
      href: 'https://theoplayer.github.io/react-native-theoplayer/api/',
    }),
    knowledgeBaseCategory(),
    faqLink(),
  ],
  chromecast: [
    'chromecast/index',
    gettingStartedCategory({
      collapsed: false,
      link: { type: 'doc', id: 'getting-started/sdks/chromecast/getting-started' },
      items: [{ type: 'autogenerated', dirName: 'getting-started/01-sdks/06-chromecast' }],
    }),
    howToGuidesCategory({
      link: { type: 'doc', id: 'how-to-guides/index' },
      items: [{ type: 'autogenerated', dirName: 'how-to-guides' }],
    }),
    'changelog',
    knowledgeBaseCategory(),
    faqLink(),
  ],
  roku: [
    'roku/index',
    gettingStartedCategory({
      collapsed: false,
      link: { type: 'doc', id: 'getting-started/sdks/roku/getting-started' },
      items: [{ type: 'autogenerated', dirName: 'getting-started/01-sdks/09-roku' }],
    }),
    howToGuidesCategory({
      link: { type: 'doc', id: 'how-to-guides/index' },
      items: [{ type: 'autogenerated', dirName: 'how-to-guides' }],
    }),
    'api-reference/roku',
    knowledgeBaseCategory(),
    faqLink(),
  ],
  faq: [
    backLink(),
    {
      type: 'category',
      label: 'FAQ',
      collapsible: false,
      link: { type: 'doc', id: 'faq/index' },
      items: [{ type: 'autogenerated', dirName: 'faq' }],
    },
  ],
};

function gettingStartedCategory(config: SidebarItemCategoryConfig): SidebarItemCategoryConfig {
  return {
    type: 'category',
    label: 'Getting started',
    collapsed: false,
    description: 'Set up your first THEOplayer in just a few minutes!',
    customProps: {
      icon: 'üöÄ',
    },
    ...config,
  };
}

function examplesCategory(config: SidebarItemCategoryConfig): SidebarItemCategoryConfig {
  return {
    type: 'category',
    label: 'Examples',
    description: 'See the player in action!',
    customProps: {
      icon: 'üõù',
    },
    ...config,
  };
}

function connectorsCategory(config: SidebarItemCategoryConfig): SidebarItemCategoryConfig {
  return {
    type: 'category',
    label: 'Connectors',
    description: `Integrate third-party solutions with THEOplayer using our pre-built connectors.`,
    customProps: {
      icon: 'üîå',
    },
    ...config,
  };
}

function howToGuidesCategory(config: SidebarItemCategoryConfig): SidebarItemCategoryConfig {
  return {
    type: 'category',
    label: 'How-to guides',
    description: 'Learn how to implement our rich set of features and integrations.',
    customProps: {
      icon: 'üìñ',
    },
    ...config,
  };
}

function apiReferencesLink(config: SidebarItemLink): SidebarItemLink {
  return {
    type: 'link',
    label: 'API references',
    description: 'Discover all properties and functions of THEOplayer.',
    customProps: {
      icon: '*Ô∏è‚É£',
    },
    ...config,
  };
}

function knowledgeBaseCategory(): SidebarItemCategoryConfig {
  return {
    type: 'category',
    label: 'Knowledge base',
    description: 'Learn about topics in the video industry from our experts.',
    customProps: {
      icon: 'üß†',
    },
    link: { type: 'doc', id: 'knowledge-base/index' },
    items: [{ type: 'autogenerated', dirName: 'knowledge-base' }],
  };
}

function faqLink(): SidebarItemLink {
  return {
    type: 'link',
    label: 'FAQ',
    description: `Answers to common questions we've received from our customers over the years.`,
    customProps: {
      icon: '‚ùî',
    },
    href: '/theoplayer/faq/',
  };
}

function backLink(): SidebarItemLink {
  return {
    type: 'link',
    label: '¬´ Back',
    href: '/theoplayer/',
    customProps: {
      isBackLink: true,
    },
  };
}

function webConnectorItems(): SidebarItemConfig[] {
  return [
    {
      type: 'category',
      label: 'CMCD',
      description: 'Integrate with Common Media Client Data (CMCD) for server-side analytics.',
      customProps: {
        icon: '‚òÅÔ∏è',
      },
      link: {
        type: 'generated-index',
        title: 'CMCD Connector for Web',
        slug: 'connectors/web/cmcd',
      },
      items: [
        {
          type: 'doc',
          id: 'external/web-connectors/cmcd/README',
        },
        {
          type: 'doc',
          id: 'external/web-connectors/cmcd/CHANGELOG',
        },
        {
          type: 'link',
          label: 'API reference',
          description: 'Discover all functions provided by the CMCD connector for Web.',
          customProps: {
            icon: '*Ô∏è‚É£',
          },
          href: 'https://theoplayer.github.io/web-connectors/api/modules/CMCD_Connector.html',
        },
        {
          type: 'link',
          label: 'GitHub',
          description: 'Browse the source code or report issues on GitHub.',
          customProps: {
            icon: 'github',
          },
          href: 'https://github.com/THEOplayer/web-connectors/tree/main/cmcd',
        },
      ],
    },
    {
      type: 'category',
      label: 'Comscore',
      description: 'Integrate with Comscore for player analytics.',
      customProps: {
        icon: 'comscore',
      },
      link: {
        type: 'generated-index',
        title: 'Comscore Connector for Web',
        slug: 'connectors/web/comscore',
      },
      items: [
        {
          type: 'doc',
          id: 'external/web-connectors/comscore/README',
        },
        {
          type: 'doc',
          id: 'external/web-connectors/comscore/CHANGELOG',
        },
        {
          type: 'link',
          label: 'API reference',
          description: 'Discover all functions provided by the Comscore connector for Web.',
          customProps: {
            icon: '*Ô∏è‚É£',
          },
          href: 'https://theoplayer.github.io/web-connectors/api/modules/Comscore_Connector.html',
        },
        {
          type: 'link',
          label: 'GitHub',
          description: 'Browse the source code or report issues on GitHub.',
          customProps: {
            icon: 'github',
          },
          href: 'https://github.com/THEOplayer/web-connectors/tree/main/comscore',
        },
      ],
    },
    {
      type: 'category',
      label: 'Conviva',
      description: 'Integrate with Conviva for player analytics.',
      customProps: {
        icon: 'conviva',
      },
      link: {
        type: 'generated-index',
        title: 'Conviva Connector for Web',
        slug: 'connectors/web/conviva',
      },
      items: [
        {
          type: 'doc',
          id: 'external/web-connectors/conviva/README',
        },
        {
          type: 'doc',
          id: 'external/web-connectors/conviva/CHANGELOG',
        },
        {
          type: 'link',
          label: 'API reference',
          description: 'Discover all functions provided by the Conviva connector for Web.',
          customProps: {
            icon: '*Ô∏è‚É£',
          },
          href: 'https://theoplayer.github.io/web-connectors/api/modules/Conviva_Connector.html',
        },
        {
          type: 'link',
          label: 'GitHub',
          description: 'Browse the source code or report issues on GitHub.',
          customProps: {
            icon: 'github',
          },
          href: 'https://github.com/THEOplayer/web-connectors/tree/main/conviva',
        },
      ],
    },
    {
      type: 'category',
      label: 'Nielsen',
      description: 'Integrate with Nielsen for player analytics.',
      customProps: {
        icon: 'nielsen',
      },
      link: {
        type: 'generated-index',
        title: 'Nielsen Connector for Web',
        slug: 'connectors/web/nielsen',
      },
      items: [
        {
          type: 'doc',
          id: 'external/web-connectors/nielsen/README',
        },
        {
          type: 'doc',
          id: 'external/web-connectors/nielsen/CHANGELOG',
        },
        {
          type: 'link',
          label: 'API reference',
          description: 'Discover all functions provided by the Nielsen connector for Web.',
          customProps: {
            icon: '*Ô∏è‚É£',
          },
          href: 'https://theoplayer.github.io/web-connectors/api/modules/Nielsen_Connector.html',
        },
        {
          type: 'link',
          label: 'GitHub',
          description: 'Browse the source code or report issues on GitHub.',
          customProps: {
            icon: 'github',
          },
          href: 'https://github.com/THEOplayer/web-connectors/tree/main/nielsen',
        },
      ],
    },
    {
      type: 'category',
      label: 'Yospace',
      description: 'Integrate with Yospace for server-side ad insertion (SSAI).',
      customProps: {
        icon: 'yospace',
      },
      link: {
        type: 'generated-index',
        title: 'Yospace Connector for Web',
        slug: 'connectors/web/yospace',
      },
      items: [
        {
          type: 'doc',
          id: 'external/web-connectors/yospace/README',
        },
        {
          type: 'doc',
          id: 'external/web-connectors/yospace/CHANGELOG',
        },
        {
          type: 'link',
          label: 'API reference',
          description: 'Discover all functions provided by the Yospace connector for Web.',
          customProps: {
            icon: '*Ô∏è‚É£',
          },
          href: 'https://theoplayer.github.io/web-connectors/api/modules/Yospace_Connector.html',
        },
        {
          type: 'link',
          label: 'GitHub',
          description: 'Browse the source code or report issues on GitHub.',
          customProps: {
            icon: 'github',
          },
          href: 'https://github.com/THEOplayer/web-connectors/tree/main/yospace',
        },
      ],
    },
  ];
}

function androidConnectorItems(): SidebarItemConfig[] {
  return [
    {
      type: 'category',
      label: 'Comscore',
      description: 'Integrate with Comscore for player analytics.',
      customProps: {
        icon: 'comscore',
      },
      link: {
        type: 'generated-index',
        title: 'Comscore Connector for Android',
        slug: 'connectors/android/comscore',
      },
      items: [
        {
          type: 'doc',
          id: 'external/android-connector/connectors/analytics/comscore/README',
        },
        {
          type: 'link',
          label: 'GitHub',
          description: 'Browse the source code or report issues on GitHub.',
          customProps: {
            icon: 'github',
          },
          href: 'https://github.com/THEOplayer/android-connector/tree/master/connectors/analytics/comscore',
        },
      ],
    },
    {
      type: 'category',
      label: 'Conviva',
      description: 'Integrate with Conviva for player analytics.',
      customProps: {
        icon: 'conviva',
      },
      link: {
        type: 'generated-index',
        title: 'Conviva Connector for Android',
        slug: 'connectors/android/conviva',
      },
      items: [
        {
          type: 'doc',
          id: 'external/android-connector/connectors/analytics/conviva/README',
        },
        {
          type: 'link',
          label: 'GitHub',
          description: 'Browse the source code or report issues on GitHub.',
          customProps: {
            icon: 'github',
          },
          href: 'https://github.com/THEOplayer/android-connector/tree/master/connectors/analytics/conviva',
        },
      ],
    },
    {
      type: 'category',
      label: 'Nielsen',
      description: 'Integrate with Nielsen for player analytics.',
      customProps: {
        icon: 'nielsen',
      },
      link: {
        type: 'generated-index',
        title: 'Nielsen Connector for Android',
        slug: 'connectors/android/nielsen',
      },
      items: [
        {
          type: 'doc',
          id: 'external/android-connector/connectors/analytics/nielsen/README',
        },
        {
          type: 'link',
          label: 'GitHub',
          description: 'Browse the source code or report issues on GitHub.',
          customProps: {
            icon: 'github',
          },
          href: 'https://github.com/THEOplayer/android-connector/tree/master/connectors/analytics/nielsen',
        },
      ],
    },
    {
      type: 'category',
      label: 'Media Session',
      description: 'Integrate with Android Media Session to delegate system-level playback controls to your app.',
      customProps: {
        icon: 'üì±',
      },
      link: {
        type: 'generated-index',
        title: 'Media Session Connector for Android',
        slug: 'connectors/android/mediasession',
      },
      items: [
        {
          type: 'doc',
          id: 'external/android-connector/connectors/mediasession/README',
        },
        {
          type: 'link',
          label: 'GitHub',
          description: 'Browse the source code or report issues on GitHub.',
          customProps: {
            icon: 'github',
          },
          href: 'https://github.com/THEOplayer/android-connector/tree/master/connectors/mediasession',
        },
      ],
    },
  ];
}

function iosConnectorItems(): SidebarItemConfig[] {
  return [
    {
      type: 'category',
      label: 'Comscore',
      description: 'Integrate with Comscore for player analytics.',
      customProps: {
        icon: 'comscore',
      },
      link: {
        type: 'generated-index',
        title: 'Comscore Connector for iOS & tvOS',
        slug: 'connectors/ios/comscore',
      },
      items: [
        {
          type: 'doc',
          id: 'external/iOS-Connector/Code/Comscore/README',
        },
        {
          type: 'doc',
          id: 'external/iOS-Connector/Code/Comscore-Examples/README',
        },
        {
          type: 'link',
          label: 'GitHub',
          description: 'Browse the source code or report issues on GitHub.',
          customProps: {
            icon: 'github',
          },
          href: 'https://github.com/THEOplayer/iOS-Connector/tree/main/Code/Comscore',
        },
      ],
    },
    {
      type: 'category',
      label: 'Conviva',
      description: 'Integrate with Conviva for player analytics.',
      customProps: {
        icon: 'conviva',
      },
      link: {
        type: 'generated-index',
        title: 'Conviva Connector for iOS & tvOS',
        slug: 'connectors/ios/conviva',
      },
      items: [
        {
          type: 'doc',
          id: 'external/iOS-Connector/Code/Conviva/README',
        },
        {
          type: 'doc',
          id: 'external/iOS-Connector/Code/Conviva-Examples/README',
        },
        {
          type: 'link',
          label: 'GitHub',
          description: 'Browse the source code or report issues on GitHub.',
          customProps: {
            icon: 'github',
          },
          href: 'https://github.com/THEOplayer/iOS-Connector/tree/main/Code/Conviva',
        },
      ],
    },
    {
      type: 'category',
      label: 'Conviva with Verizon Media',
      description: 'Integrate with Conviva and Verizon Media for player analytics.',
      customProps: {
        icon: 'conviva',
      },
      link: {
        type: 'generated-index',
        title: 'Conviva & Verizon Media Connector for iOS & tvOS',
        slug: 'connectors/ios/conviva-verizonmedia',
      },
      items: [
        {
          type: 'doc',
          id: 'external/iOS-Connector/Code/Conviva-VerizonMedia/README',
        },
        {
          type: 'doc',
          id: 'external/iOS-Connector/Code/Conviva-VerizonMedia-Examples/README',
        },
        {
          type: 'link',
          label: 'GitHub',
          description: 'Browse the source code or report issues on GitHub.',
          customProps: {
            icon: 'github',
          },
          href: 'https://github.com/THEOplayer/iOS-Connector/tree/main/Code/Conviva-VerizonMedia',
        },
      ],
    },
    {
      type: 'category',
      label: 'Nielsen',
      description: 'Integrate with Nielsen for player analytics.',
      customProps: {
        icon: 'nielsen',
      },
      link: {
        type: 'generated-index',
        title: 'Nielsen Connector for iOS & tvOS',
        slug: 'connectors/ios/nielsen',
      },
      items: [
        {
          type: 'doc',
          id: 'external/iOS-Connector/Code/Nielsen/README',
        },
        {
          type: 'link',
          label: 'GitHub',
          description: 'Browse the source code or report issues on GitHub.',
          customProps: {
            icon: 'github',
          },
          href: 'https://github.com/THEOplayer/iOS-Connector/tree/main/Code/Nielsen',
        },
      ],
    },
    {
      type: 'category',
      label: 'Sideloaded Subtitles',
      description: 'Add support for sideloaded subtitles to your player.',
      customProps: {
        icon: 'üí¨',
      },
      link: {
        type: 'generated-index',
        title: 'Sideloaded Subtitles for iOS & tvOS',
        slug: 'connectors/ios/sideloaded-texttracks',
      },
      items: [
        {
          type: 'doc',
          id: 'external/iOS-Connector/Code/Sideloaded-TextTracks/README',
        },
        {
          type: 'link',
          label: 'GitHub',
          description: 'Browse the source code or report issues on GitHub.',
          customProps: {
            icon: 'github',
          },
          href: 'https://github.com/THEOplayer/iOS-Connector/tree/main/Code/Sideloaded-TextTracks',
        },
      ],
    },
    {
      type: 'doc',
      id: 'external/iOS-Connector/CHANGELOG',
    },
  ];
}

export default sidebars;
