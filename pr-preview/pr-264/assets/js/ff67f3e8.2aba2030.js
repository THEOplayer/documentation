"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["83008"],{30664:function(e,t,n){n.r(t),n.d(t,{default:()=>c,frontMatter:()=>r,metadata:()=>s,assets:()=>h,toc:()=>o,contentTitle:()=>l});var s=JSON.parse('{"id":"guides/scheduler","title":"THEOlive scheduler: schedule channel start & stop","description":"Define when a channel should be ready and when it should be stopped","source":"@site/theolive/guides/scheduler.mdx","sourceDirName":"guides","slug":"/guides/scheduler","permalink":"/documentation/pr-preview/pr-264/theolive/guides/scheduler","draft":false,"unlisted":false,"editUrl":"https://github.com/THEOplayer/documentation/blob/-/theolive/guides/scheduler.mdx","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"sidebar_label":"Scheduler"},"sidebar":"theolive","previous":{"title":"Webhooks","permalink":"/documentation/pr-preview/pr-264/theolive/guides/real-time-update-with-webhooks"},"next":{"title":"In-stream Metadata","permalink":"/documentation/pr-preview/pr-264/theolive/guides/sei-messages"}}'),a=n("85893"),i=n("50065");let r={sidebar_position:10,sidebar_label:"Scheduler"},l="THEOlive scheduler: schedule channel start & stop",h={},o=[{value:"Define when a channel should be ready and when it should be stopped",id:"define-when-a-channel-should-be-ready-and-when-it-should-be-stopped",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Creating and managing a scheduler through the API",id:"creating-and-managing-a-scheduler-through-the-api",level:2},{value:"Scheduler management in the console",id:"scheduler-management-in-the-console",level:2}];function d(e){let t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"theolive-scheduler-schedule-channel-start--stop",children:"THEOlive scheduler: schedule channel start & stop"})}),"\n",(0,a.jsx)(t.h2,{id:"define-when-a-channel-should-be-ready-and-when-it-should-be-stopped",children:"Define when a channel should be ready and when it should be stopped"}),"\n",(0,a.jsx)(t.p,{children:"THEOlive offers the option to schedule the start and stop of a channel automatically. This has some advantages:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"All machines needed to run the THEOlive stack will be ready on time"}),"\n",(0,a.jsx)(t.li,{children:"You don't need to develop a scheduler on your own, reducing costs"}),"\n",(0,a.jsx)(t.li,{children:"No needless transcoding minutes when forgetting to stop a channel"}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,a.jsxs)(t.p,{children:["A scheduler can be seen as a ",(0,a.jsx)(t.strong,{children:"collection of"})," a ",(0,a.jsx)(t.strong,{children:"start and end time"}),", and ",(0,a.jsx)(t.strong,{children:"a list of channels"})," that have to start and stop at these given times. Setting the end time of a scheduler is optional: when not setting an end time, you'll still have to terminate the scheduler yourself, but this can be useful when you don't know the exact end time of your event."]}),"\n",(0,a.jsxs)(t.p,{children:["15 minutes before the actual start, the channels of this scheduler will go in ",(0,a.jsx)(t.code,{children:"scheduled"})," state. During this period, the whole THEOlive stack will start up. The THEOlive player will show nothing in this period: it will behave the same as if the channel was in stopped mode. Note that you can also create a scheduler of which the start time is in less than 15 minutes, or even immediately (not setting the ",(0,a.jsx)(t.code,{children:"start"})," property via the API): channels will still be available for your viewers at the chosen start time, but THEOlive doesn't guarantee that your stream is already available, as starting up the machines in our stack takes some time."]}),"\n",(0,a.jsxs)(t.p,{children:["At the chosen start time, the channel will move to ",(0,a.jsx)(t.code,{children:"playing"})," mode and start showing content to your viewers. When the end time is met, or the scheduler gets terminated manually, the channel will stop. Afterwards (around 15 minutes ",(0,a.jsx)(t.em,{children:"after"})," the termination of the scheduler) a usage report will be generated. This report will contain the seconds viewed per channel, channel alias, per country, per OS and browser version, and much more!"]}),"\n",(0,a.jsx)(t.h2,{id:"creating-and-managing-a-scheduler-through-the-api",children:"Creating and managing a scheduler through the API"}),"\n",(0,a.jsxs)(t.p,{children:["Creating a scheduler is very easy through our API. Please refer to ",(0,a.jsx)(t.a,{href:"https://developers.theo.live/reference/create-scheduler",children:"Create scheduler"})," for more information. You can update the scheduler at any time. When a scheduler is active, you can choose to ",(0,a.jsx)(t.a,{href:"https://developers.theo.live/reference/terminate-scheduler",children:"terminate"})," it manually (for example when your event is earlier done, or when you didn't set an end time)."]}),"\n",(0,a.jsxs)(t.p,{children:["An inactive scheduler can also be ",(0,a.jsx)(t.a,{href:"https://developers.theo.live/reference/delete-scheduler",children:"deleted"})," via the API."]}),"\n",(0,a.jsxs)(t.p,{children:["15 minutes after a scheduler has been terminated, a ",(0,a.jsx)(t.a,{href:"https://developers.theo.live/reference/get-scheduler-report",children:"report"})," can be requested as well."]}),"\n",(0,a.jsx)(t.h2,{id:"scheduler-management-in-the-console",children:"Scheduler management in the console"}),"\n",(0,a.jsx)(t.p,{children:"At any time, you can see the schedulers that are active, pending and terminated. Schedulers that are active cannot be deleted."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:n(21717).Z+"",title:"Scheduler overview",width:"1834",height:"1132"})}),"\n",(0,a.jsx)(t.p,{children:"When creating a new or managing an existing scheduler, you can pass a name, start and (optional) end date, and select the channels that are part of this scheduler and should start and stop at the given timestamps."}),"\n",(0,a.jsxs)(t.p,{children:["As a user, you can also pass an optional ",(0,a.jsx)(t.em,{children:"Client ID"}),", which is an ID you can use for your reference. You can also pass a metadata object, which consists of key-value pairs."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:n(15370).Z+"",title:"Creating a new scheduler",width:"1334",height:"1112"})})]})}function c(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},15370:function(e,t,n){n.d(t,{Z:function(){return s}});let s=n.p+"assets/images/8ce9112-create-scheduler-09f00fe0342961371a427e89b068707c.PNG"},21717:function(e,t,n){n.d(t,{Z:function(){return s}});let s=n.p+"assets/images/cd5c594-scheduler-overview-25529f1ecc518bc67c6ac31a379bb77e.png"},50065:function(e,t,n){n.d(t,{Z:function(){return l},a:function(){return r}});var s=n(67294);let a={},i=s.createContext(a);function r(e){let t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);