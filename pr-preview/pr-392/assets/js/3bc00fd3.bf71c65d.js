"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["61651"],{461352:function(e,t,a){a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>n,toc:()=>o});var n=a(830167),i=a(785893),r=a(250065);let s={title:"Frame metadata"},l="Frame metadata with Millicast on Web",c={},o=[{value:"Enable metadata on your Millicast source",id:"enable-metadata-on-your-millicast-source",level:2},{value:"Listen for metadata text track events",id:"listen-for-metadata-text-track-events",level:2},{value:"More information",id:"more-information",level:2}];function d(e){let t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"frame-metadata-with-millicast-on-web",children:"Frame metadata with Millicast on Web"})}),"\n",(0,i.jsxs)(t.p,{children:["In addition to streaming audio and video, Millicast also supports inserting additional metadata about what is happening\nin the stream. This is known as ",(0,i.jsx)(t.em,{children:"Frame Metadata"}),", which allows for embedding and extracting custom application data\nwith frame-level accuracy. For example, this can be used to transport timecodes, bounding boxes, and overlays."]}),"\n",(0,i.jsx)(t.h2,{id:"enable-metadata-on-your-millicast-source",children:"Enable metadata on your Millicast source"}),"\n",(0,i.jsxs)(t.p,{children:["First, follow ",(0,i.jsx)(t.a,{href:"/documentation/pr-preview/pr-392/millicast/playback/players-sdks/web/player/",children:"our Getting Started with Millicast on Web guide"}),"\nto set up Millicast with THEOplayer in your web app or website."]}),"\n",(0,i.jsxs)(t.p,{children:["Then, enable the ",(0,i.jsx)(t.code,{children:"metadata"})," option in your ",(0,i.jsxs)(t.a,{href:"/documentation/pr-preview/pr-392/millicast/playback/players-sdks/web/player/#add-configuration",children:["Millicast source's ",(0,i.jsx)(t.code,{children:"connectOptions"})]}),"\nin order to receive frame metadata:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"player.source = {\n  sources: {\n    type: 'millicast',\n    /* ... */\n    connectOptions: {\n      // highlight-next-line\n      metadata: true,\n    },\n  },\n};\n"})}),"\n",(0,i.jsx)(t.h2,{id:"listen-for-metadata-text-track-events",children:"Listen for metadata text track events"}),"\n",(0,i.jsxs)(t.p,{children:["THEOplayer exposes Millicast metadata as cues on a metadata text track. First, listen for the ",(0,i.jsx)(t.code,{children:"addtrack"})," event\nto receive the Millicast metadata track. Then, listen for the ",(0,i.jsx)(t.code,{children:"entercue"})," event to be notified whenever new metadata\nis added to the track."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:"player.textTracks.addEventListener('addtrack', function (addTrackEvent) {\n  const track = addTrackEvent.track;\n  if (track.kind === 'metadata' && track.type === 'millicast') {\n    track.addEventListener('entercue', function (event) {\n      const cue = event.cue;\n      console.log(`Received frame metadata at timecode ${cue.timecode} with data:`, cue.unregistered);\n    });\n  }\n});\n"})}),"\n",(0,i.jsxs)(t.p,{children:["See ",(0,i.jsx)(t.a,{href:"pathname:///theoplayer/how-to-guides/texttrack/how-to-detect-active-text-track-cues/",children:"our guide on how to detect active text track cues"}),"\nfor more information."]}),"\n",(0,i.jsx)(t.h2,{id:"more-information",children:"More information"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"pathname:///theoplayer/v9/api-reference/web/interfaces/MillicastMetadataCue.html",children:"API references"})}),"\n"]})]})}function m(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},250065:function(e,t,a){a.d(t,{Z:()=>l,a:()=>s});var n=a(667294);let i={},r=n.createContext(i);function s(e){let t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(r.Provider,{value:t},e.children)}},830167:function(e){e.exports=JSON.parse('{"id":"playback/players-sdks/web/player/frame-metadata","title":"Frame metadata","description":"In addition to streaming audio and video, Millicast also supports inserting additional metadata about what is happening","source":"@site/millicast/playback/players-sdks/web/player/frame-metadata.mdx","sourceDirName":"playback/players-sdks/web/player","slug":"/playback/players-sdks/web/player/frame-metadata","permalink":"/documentation/pr-preview/pr-392/millicast/playback/players-sdks/web/player/frame-metadata","draft":false,"unlisted":false,"editUrl":"https://github.com/THEOplayer/documentation/blob/-/millicast/playback/players-sdks/web/player/frame-metadata.mdx","tags":[],"version":"current","frontMatter":{"title":"Frame metadata"},"sidebar":"millicast","previous":{"title":"Millicast diagnostics","permalink":"/documentation/pr-preview/pr-392/millicast/web-player-diagnostics"},"next":{"title":"Millicast Web SDK","permalink":"/documentation/pr-preview/pr-392/millicast/playback/players-sdks/web/sdk/"}}')}}]);