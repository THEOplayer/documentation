"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["41331"],{5982:function(e,t,a){a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>c});var n=a(970337),l=a(785893),r=a(250065);let i={},s="Basic Playback Guide",o={},c=[{value:"Player Setup",id:"player-setup",level:2},{value:"Adjust Volume",id:"adjust-volume",level:2},{value:"Play/Pause Stream",id:"playpause-stream",level:2},{value:"Enable Full Screen",id:"enable-full-screen",level:2},{value:"Select Quality Layer",id:"select-quality-layer",level:2},{value:"More information",id:"more-information",level:2}];function u(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"basic-playback-guide",children:"Basic Playback Guide"})}),"\n",(0,l.jsxs)(t.p,{children:["After following our ",(0,l.jsx)(t.a,{href:"/documentation/pr-preview/pr-308/theolive/playback/flutter/getting-started",children:"Getting Started with Flutter guide"})," or the ",(0,l.jsx)(t.a,{href:"#player-setup",children:"Player Setup"})," section below, you will be ready to programmatically perform common playback actions. These include increasing/decreasing\nthe volume, playing/pausing the stream, enabling full screen, and selecting quality layers."]}),"\n",(0,l.jsx)(t.h2,{id:"player-setup",children:"Player Setup"}),"\n",(0,l.jsx)(t.p,{children:"To get started with THEOlive playback using Flutter, you must first initialize a THEOplayer instance and set a THEOlive source."}),"\n",(0,l.jsx)(t.p,{children:"Here is example code of initializing a THEOplayer instance with Flutter:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-dart",children:'late THEOplayer player;\n\n@override\nvoid initState() {\n  super.initState();\n\n  player = THEOplayer(\n      theoPlayerConfig: THEOplayerConfig(\n        license: "YOUR_PLAYER_LICENSE_STRING",\n        // Extra THEOlive configuration - set a custom sessionId to follow the requests on the backend\n        theolive: TheoLiveConfiguration(externalSessionId: "mySessionID"),\n      ),\n  )\n}\n\nplayer.source = SourceDescription(sources: [\n    TheoLiveSource(src: "2vqqekesftg9zuvxu9tdme6kl"),\n]);\n'})}),"\n",(0,l.jsx)(t.h2,{id:"adjust-volume",children:"Adjust Volume"}),"\n",(0,l.jsxs)(t.p,{children:["To adjust the volume of your stream during playback, you can set the ",(0,l.jsx)(t.code,{children:"volume"})," property to a floating point number in the range of 0.0 (0%) minimum and 1.0 (100%) maximum."]}),"\n",(0,l.jsx)(t.p,{children:"The following code sets the player's volume to 50%:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-dart",children:"// the stream's volume will now be 50%\nplayer.volume = 0.5;\n"})}),"\n",(0,l.jsx)(t.h2,{id:"playpause-stream",children:"Play/Pause Stream"}),"\n",(0,l.jsxs)(t.p,{children:["To play or pause your stream, you can use the ",(0,l.jsx)(t.code,{children:"play"})," and ",(0,l.jsx)(t.code,{children:"pause"})," methods available on your player variable."]}),"\n",(0,l.jsx)(t.p,{children:"To pause your stream:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-dart",children:"player.pause();\n"})}),"\n",(0,l.jsx)(t.p,{children:"To play your stream:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-dart",children:"player.play();\n"})}),"\n",(0,l.jsx)(t.h2,{id:"enable-full-screen",children:"Enable Full Screen"}),"\n",(0,l.jsxs)(t.p,{children:["To make your stream take up the full screen of the device it is being viewed upon, you must use the ",(0,l.jsx)(t.code,{children:"setPresentationMode"})," method."]}),"\n",(0,l.jsxs)(t.p,{children:["The ",(0,l.jsx)(t.code,{children:"setPresentationMode"})," method can accept the following arguments:"]}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.code,{children:"'INLINE'"}),": The player is shown in its original location on the page. (default presentation mode)"]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.code,{children:"'FULLSCREEN'"}),": The player fills the entire screen."]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.code,{children:"'PIP'"}),": (Picture-in-picture) The player is shown on top of the page (see PiPConfiguration for more options)."]}),"\n"]}),"\n",(0,l.jsx)(t.p,{children:"To make the current stream take up the full screen, pass a presentationMode of 'fullscreen' to the requestMode method with the following code:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-dart",children:"// stream will take up the full screen which it is being viewed on\nplayer.setPresentationMode('FULLSCREEN');\n"})}),"\n",(0,l.jsxs)(t.p,{children:["To confirm that the change has occured, check the ",(0,l.jsx)(t.code,{children:"getPresentationMode"})," property to ensure it now returns ",(0,l.jsx)(t.code,{children:"fullscreen"})," as its value:"]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-dart",children:"// should return a value of 'fullscreen' to the console\nprint('this is the current presentation mode being used --\x3e ${player.getPresentationMode()}');\n"})}),"\n",(0,l.jsx)(t.h2,{id:"select-quality-layer",children:"Select Quality Layer"}),"\n",(0,l.jsxs)(t.p,{children:["To select a specific quality layer during the playing of your stream, you must set the ",(0,l.jsx)(t.code,{children:"targetQuality"})," property of your player's ",(0,l.jsx)(t.code,{children:"videoTracks"})," property."]}),"\n",(0,l.jsxs)(t.p,{children:["The ",(0,l.jsx)(t.code,{children:"videoTracks"})," property leverages the Video Tracks API and will allow you to see all quality layers available, the current active quality layer, and set a new target quality layer."]}),"\n",(0,l.jsx)(t.p,{children:"To see what qualities you have available, use the following code:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-dart",children:"// import needed to use the 'inspect' function\nimport 'dart:developer';\n\n// inspect all available quality layers\nvar qualities = player.videoTracks.first.qualities.innerList;\ninspect(\"this is an array containing all available qualities --\x3e ${qualities}\");\n"})}),"\n",(0,l.jsx)(t.p,{children:"Once you know what options you have available, you can set the stream to be a specific quality with the following:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-dart",children:"// set the first quality layer in the array to be the target quality layer\nplayer.videoTracks.first.targetQuality = player.videoTracks.first.qualities.first;\n"})}),"\n",(0,l.jsx)(t.h2,{id:"more-information",children:"More information"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:(0,l.jsx)(t.a,{href:"/theoplayer/flutter/",children:"THEOplayer Flutter SDK"})}),"\n"]})]})}function d(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},250065:function(e,t,a){a.d(t,{Z:()=>s,a:()=>i});var n=a(667294);let l={},r=n.createContext(l);function i(e){let t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),n.createElement(r.Provider,{value:t},e.children)}},970337:function(e){e.exports=JSON.parse('{"id":"playback/flutter/basic-playback-guide","title":"Basic Playback Guide","description":"After following our Getting Started with Flutter guide or the Player Setup section below, you will be ready to programmatically perform common playback actions. These include increasing/decreasing","source":"@site/theolive/playback/flutter/01-basic-playback-guide.mdx","sourceDirName":"playback/flutter","slug":"/playback/flutter/basic-playback-guide","permalink":"/documentation/pr-preview/pr-308/theolive/playback/flutter/basic-playback-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/THEOplayer/documentation/blob/-/theolive/playback/flutter/01-basic-playback-guide.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"theolive","previous":{"title":"Getting Started with Flutter","permalink":"/documentation/pr-preview/pr-308/theolive/playback/flutter/getting-started"},"next":{"title":"Getting started with Roku","permalink":"/documentation/pr-preview/pr-308/theolive/playback/roku/getting-started"}}')}}]);