"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["76915"],{979213:function(e,a,n){n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var i=n(240695),r=n(474848),t=n(884429),o=n(733021),l=n(372207);let s={},d="Media3 pipeline for Android",c={},u=[{value:"Usage",id:"usage",level:2},{value:"Playback using Media3",id:"playback-using-media3",level:3},{value:"Caching and offline playback with Media3",id:"caching-and-offline-playback-with-media3",level:3},{value:"Known limitations",id:"known-limitations",level:2},{value:"FAQ",id:"faq",level:2},{value:"How does Media3 affect the THEOplayer Android SDK?",id:"how-does-media3-affect-the-theoplayer-android-sdk",level:3},{value:"Does this use ExoPlayer?",id:"does-this-use-exoplayer",level:3}];function p(e){let a={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"media3-pipeline-for-android",children:"Media3 pipeline for Android"})}),"\n",(0,r.jsxs)(a.p,{children:["The THEOplayer Android Media3 pipeline is a new and rebuilt base layer for playback of video and audio files for the THEOplayer Android SDK.\nIt is based on ",(0,r.jsx)(a.a,{href:"https://developer.android.com/media/media3",children:"Jetpack Media3"})," components, and it provides more stable playback covering a broader range of use cases, all while being lighter in size and more performant."]}),"\n",(0,r.jsx)(a.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(a.p,{children:["The Media3 pipeline is part of the THEOplayer Android SDK.\nFollow ",(0,r.jsx)(a.a,{href:"/documentation/pr-preview/pr-436/theoplayer/v9/getting-started/sdks/android/getting-started",children:"our Getting Started guide"}),"\nto set up THEOplayer in your Android app."]}),"\n",(0,r.jsxs)(a.admonition,{type:"info",children:[(0,r.jsx)(a.p,{children:"In THEOplayer version 8.x, the Media3 pipeline was available as a separate integration package.\nStarting with version 9.0, this pipeline is now part of the THEOplayer Android SDK itself."}),(0,r.jsxs)(a.p,{children:["See ",(0,r.jsx)(a.a,{href:"/documentation/pr-preview/pr-436/theoplayer/v9/getting-started/sdks/android/migrating-to-theoplayer-9",children:"our migration guide"}),"\nfor instructions on how to migrate from the Media3 integration package to the built-in version."]})]}),"\n",(0,r.jsx)(a.h3,{id:"playback-using-media3",children:"Playback using Media3"}),"\n",(0,r.jsx)(a.p,{children:"By default, THEOplayer will play all types of sources (except Millicast) using the Media3 playback pipeline."}),"\n",(0,r.jsxs)(a.p,{children:["You can opt in or opt out of this behavior by setting ",(0,r.jsx)(a.a,{href:"pathname:///theoplayer/v9/api-reference/android/com/theoplayer/android/api/source/TypedSource.Builder.html#playbackPipeline(com.theoplayer.android.api.source.PlaybackPipeline)",children:(0,r.jsx)(a.code,{children:"TypedSource.playbackPipeline"})}),"\nto either ",(0,r.jsx)(a.code,{children:"PlaybackPipeline.MEDIA3"})," (to ",(0,r.jsx)(a.em,{children:"always"})," use Media3 playback)\nor ",(0,r.jsx)(a.code,{children:"PlaybackPipeline.LEGACY"})," (to ",(0,r.jsx)(a.em,{children:"never"})," use Media3 playback)."]}),"\n",(0,r.jsxs)(o.A,{queryString:"lang",children:[(0,r.jsx)(l.default,{value:"kotlin",label:"Kotlin",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-kotlin",children:'val typedSource = TypedSource\n    .Builder("https://cdn.theoplayer.com/video/dash/big_buck_bunny/BigBuckBunny_10s_simple_2014_05_09.mpd")\n    .type(SourceType.DASH)\n    // highlight-next-line\n    .playbackPipeline(PlaybackPipeline.MEDIA3)\n    .build()\n\nval sourceDescription = SourceDescription\n    .Builder(typedSource)\n    .build()\n\ntheoPlayerView.player.source = sourceDescription\n'})})}),(0,r.jsx)(l.default,{value:"java",label:"Java",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'TypedSource typedSource = new TypedSource\n    .Builder("https://cdn.theoplayer.com/video/dash/big_buck_bunny/BigBuckBunny_10s_simple_2014_05_09.mpd")\n    .type(SourceType.DASH)\n    // highlight-next-line\n    .playbackPipeline(PlaybackPipeline.MEDIA3)\n    .build();\n\nSourceDescription sourceDescription = new SourceDescription\n    .Builder(typedSource)\n    .build();\n\ntheoPlayerView.getPlayer().setSource(sourceDescription);\n'})})})]}),"\n",(0,r.jsx)(a.h3,{id:"caching-and-offline-playback-with-media3",children:"Caching and offline playback with Media3"}),"\n",(0,r.jsx)(a.p,{children:"By default, THEOplayer will cache sources using the Media3 storage backend.\nSources cached with this backend can only be played using the Media3 playback pipeline."}),"\n",(0,r.jsxs)(a.p,{children:["You can opt in or opt out of this behavior by setting ",(0,r.jsx)(a.a,{href:"pathname:///theoplayer/v9/api-reference/android/com/theoplayer/android/api/cache/CachingParameters.Builder.html#storageType(com.theoplayer.android.api.cache.CacheStorageType)",children:(0,r.jsx)(a.code,{children:"CachingParameters.storageType"})}),"\nto either ",(0,r.jsx)(a.code,{children:"CacheStorageType.MEDIA3"})," (to ",(0,r.jsx)(a.em,{children:"always"})," use Media3 caching)\nor ",(0,r.jsx)(a.code,{children:"CacheStorageType.LEGACY"})," (to ",(0,r.jsx)(a.em,{children:"never"})," use Media3 caching) when creating your caching task."]}),"\n",(0,r.jsxs)(o.A,{queryString:"lang",children:[(0,r.jsx)(l.default,{value:"kotlin",label:"Kotlin",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-kotlin",children:'val cache = THEOplayerGlobal.getSharedInstance(context).cache\nval sourceDescription = SourceDescription.Builder(\n    TypedSource.Builder("https://cdn.theoplayer.com/video/dash/big_buck_bunny/BigBuckBunny_10s_simple_2014_05_09.mpd")\n        .playbackPipeline(PlaybackPipeline.MEDIA3)\n        .build()\n    ).build()\nval cachingParameters = CachingParameters.Builder()\n    // highlight-next-line\n    .storageType(CacheStorageType.MEDIA3)\n    .build()\nval cachingTask = cache.createTask(sourceDescription, cachingParameters)\ncachingTask.start()\n'})})}),(0,r.jsx)(l.default,{value:"java",label:"Java",children:(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'Cache cache = THEOplayerGlobal.getSharedInstance(context).getCache();\nSourceDescription sourceDescription = SourceDescription.Builder(\n    TypedSource.Builder("https://cdn.theoplayer.com/video/dash/big_buck_bunny/BigBuckBunny_10s_simple_2014_05_09.mpd")\n        .playbackPipeline(PlaybackPipeline.MEDIA3)\n        .build()\n    ).build();\nCachingParameters cachingParameters = CachingParameters.Builder()\n    // highlight-next-line\n    .storageType(CacheStorageType.MEDIA3)\n    .build();\nCachingTask cachingTask = cache.createTask(sourceDescription, cachingParameters);\ncachingTask.start();\n'})})})]}),"\n",(0,r.jsx)(a.h2,{id:"known-limitations",children:"Known limitations"}),"\n",(0,r.jsx)(a.p,{children:"Media3 playback is ready for production use and should work with most streams.\nHowever, there are currently some features and use cases that are not yet fully supported:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.code,{children:"THEOplayerGlobal.playbackSettings"})," is not supported."]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"faq",children:"FAQ"}),"\n",(0,r.jsx)(a.h3,{id:"how-does-media3-affect-the-theoplayer-android-sdk",children:"How does Media3 affect the THEOplayer Android SDK?"}),"\n",(0,r.jsxs)(a.p,{children:["Media3 replaces the media playback layer of the THEOplayer Android SDK, offering improvements in performance and stability for playback over our current implementation. As only core media playback is affected, all player APIs remain identical and other features and integrations (such as ads, analytics or Chromecast) are not affected and will function the same. See ",(0,r.jsx)(a.a,{href:"#known-limitations",children:"the Known limitations section"})," for more info on what features might currently be affected."]}),"\n",(0,r.jsx)(a.h3,{id:"does-this-use-exoplayer",children:"Does this use ExoPlayer?"}),"\n",(0,r.jsx)(a.p,{children:"While we make use of ExoPlayer components, this is not a plain ExoPlayer implementation. In addition to the integrations, features and support already offered by the THEOplayer Android SDK, we've reused what makes sense to implement our own playback pipeline that offers improvements, bugfixes and additional functionality over ExoPlayer."})]})}function h(e={}){let{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},403118:function(e,a,n){n.d(a,{A:()=>i});let i={tabItem:"tabItem_Ymn6"}},827778:function(e,a,n){n.d(a,{A:()=>i});let i={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"}},372207:function(e,a,n){n.r(a),n.d(a,{default:()=>o});var i=n(474848);n(296540);var r=n(39836),t=n(403118);function o({children:e,hidden:a,className:n}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(t.A.tabItem,n),hidden:a,children:e})}},733021:function(e,a,n){n.d(a,{A:()=>m});var i=n(474848),r=n(296540),t=n(39836),o=n(416364),l=n(568251),s=n(243272),d=n(298864),c=n(827778);function u({className:e,block:a,selectedValue:n,selectValue:r,tabValues:o}){let s=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.a_)(),u=e=>{let a=e.currentTarget,i=o[s.indexOf(a)].value;i!==n&&(d(a),r(i))},p=e=>{let a=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let n=s.indexOf(e.currentTarget)+1;a=s[n]??s[0];break}case"ArrowLeft":{let n=s.indexOf(e.currentTarget)-1;a=s[n]??s[s.length-1]}}a?.focus()};return(0,i.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":a},e),children:o.map(({value:e,label:a,attributes:r})=>(0,i.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{s.push(e)},onKeyDown:p,onClick:u,...r,className:(0,t.A)("tabs__item",c.A.tabItem,r?.className,{"tabs__item--active":n===e}),children:a??e},e))})}function p({lazy:e,children:a,selectedValue:n}){let o=(Array.isArray(a)?a:[a]).filter(Boolean);if(e){let e=o.find(e=>e.props.value===n);return e?(0,r.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,i.jsx)("div",{className:"margin-top--md",children:o.map((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==n}))})}function h(e){let a=(0,s.u)(e);return(0,i.jsxs)("div",{className:(0,t.A)(o.G.tabs.container,"tabs-container",c.A.tabList),children:[(0,i.jsx)(u,{...a,...e}),(0,i.jsx)(p,{...a,...e})]})}function m(e){let a=(0,d.default)();return(0,i.jsx)(h,{...e,children:(0,s.v)(e.children)},String(a))}},243272:function(e,a,n){n.d(a,{u:()=>u,v:()=>d});var i=n(296540),r=n(956347),t=n(628004),o=n(425580),l=n(712213),s=n(165023);function d(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){let{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function c({value:e,tabValues:a}){return a.some(a=>a.value===e)}function u(e){let a,{defaultValue:n,queryString:u=!1,groupId:p}=e,h=function(e){let{values:a,children:n}=e;return(0,i.useMemo)(()=>{let e=a??d(n).map(({props:{value:e,label:a,attributes:n,default:i}})=>({value:e,label:a,attributes:n,default:i})),i=(0,l.XI)(e,(e,a)=>e.value===a.value);if(i.length>0)throw Error(`Docusaurus error: Duplicate values "${i.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[a,n])}(e),[m,y]=(0,i.useState)(()=>(function({defaultValue:e,tabValues:a}){if(0===a.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!c({value:e,tabValues:a}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${a.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let n=a.find(e=>e.default)??a[0];if(!n)throw Error("Unexpected error: 0 tabValues");return n.value})({defaultValue:n,tabValues:h})),[f,g]=function({queryString:e=!1,groupId:a}){let n=(0,r.W6)(),t=function({queryString:e=!1,groupId:a}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!a)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:e,groupId:a});return[(0,o.aZ)(t),(0,i.useCallback)(e=>{if(!t)return;let a=new URLSearchParams(n.location.search);a.set(t,e),n.replace({...n.location,search:a.toString()})},[t,n])]}({queryString:u,groupId:p}),[b,v]=function({groupId:e}){let a=e?`docusaurus.tab.${e}`:null,[n,r]=(0,s.Dv)(a);return[n,(0,i.useCallback)(e=>{a&&r.set(e)},[a,r])]}({groupId:p}),x=c({value:a=f??b,tabValues:h})?a:null;return(0,t.A)(()=>{x&&y(x)},[x]),{selectedValue:m,selectValue:(0,i.useCallback)(e=>{if(!c({value:e,tabValues:h}))throw Error(`Can't select invalid tab value=${e}`);y(e),g(e),v(e)},[g,v,h]),tabValues:h}}},884429:function(e,a,n){n.d(a,{R:()=>o,x:()=>l});var i=n(296540);let r={},t=i.createContext(r);function o(e){let a=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:a},e.children)}},240695:function(e){e.exports=JSON.parse('{"id":"how-to-guides/android/media3/getting-started","title":"Media3 pipeline for Android","description":"The THEOplayer Android Media3 pipeline is a new and rebuilt base layer for playback of video and audio files for the THEOplayer Android SDK.","source":"@site/theoplayer_versioned_docs/version-v9/how-to-guides/android/media3/getting-started.mdx","sourceDirName":"how-to-guides/android/media3","slug":"/how-to-guides/android/media3/getting-started","permalink":"/documentation/pr-preview/pr-436/theoplayer/v9/how-to-guides/android/media3/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/THEOplayer/documentation/blob/-/theoplayer_versioned_docs/version-v9/how-to-guides/android/media3/getting-started.mdx","tags":[],"version":"v9","frontMatter":{},"sidebar":"android","previous":{"title":"Getting started with CMCD on Android","permalink":"/documentation/pr-preview/pr-436/theoplayer/v9/how-to-guides/android/cmcd/getting-started"},"next":{"title":"Android Connectors","permalink":"/documentation/pr-preview/pr-436/theoplayer/v9/connectors/android/"}}')}}]);