"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["31027"],{255794:function(e,i,n){n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});var t=n(364575),s=n(785893),a=n(250065);let r={title:"Media Hooks"},o=void 0,d={},l=[{value:"Event",id:"event",level:2},{value:"Data",id:"data",level:2},{value:"Examples",id:"examples",level:2},{value:"Media Clip was Requested",id:"media-clip-was-requested",level:3},{value:"Media Clip is Available",id:"media-clip-is-available",level:3},{value:"Error When Recording",id:"error-when-recording",level:3}];function c(e){let i={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.strong,{children:"media"})," ",(0,s.jsx)(i.em,{children:"type"})," of ",(0,s.jsx)(i.a,{href:"/documentation/pr-preview/pr-365/millicast/webhooks/",children:"webhook"})," allows you to receive a series of notifications for when a recording or live clip changes status. This can be helpful for when you want to automate the download or notifications for when media becomes available."]}),"\n",(0,s.jsx)(i.admonition,{title:"Setting up Webhooks",type:"tip",children:(0,s.jsxs)(i.p,{children:["Review the ",(0,s.jsx)(i.a,{href:"/documentation/pr-preview/pr-365/millicast/webhooks/",children:"Webhooks"})," guide for additional details on creating and receiving webhooks."]})}),"\n",(0,s.jsx)(i.h2,{id:"event",children:"Event"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"event"})," will be one of the following values:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"completed"})," is sent when the media asset processing is complete and available."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"processing"})," is sent when a media asset has been requested and begins processing to generate the appropriate media file."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"errored"})," may occur if there is a problem processing a request such as if a media asset is being generated from an expired timeline and can no longer be retrieved."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"deleted"})," will be sent whenever a media asset is marked for removal."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"data",children:"Data"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"data"})," payload will contain the following details:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"mediaAssetId"})," is the unique identifier that can be used with the ",(0,s.jsx)(i.a,{href:"/documentation/pr-preview/pr-365/millicast/api/media-assets-list-media-assets",children:"Media Assets"})," endpoint to retrieve additional details such as where to find the media file itself."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"type"})," identifies whether it is a ",(0,s.jsx)(i.em,{children:"clip"})," or ",(0,s.jsx)(i.em,{children:"recording"})," that is changing state."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"tokenId"})," is the unique identifier for the token used during a broadcast from which the media is created."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"streamName"})," is the unique label for the stream."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"streamId"})," is the unique identifier for the stream such ",(0,s.jsx)(i.code,{children:"accountId/streamName"}),"."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"startTime"})," identifies the epoch timestamp for when the media is requested."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"expiration"})," identifies the epoch timestamp for when the media will be marked for removal automatically."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"metadata"})," may optionally include additional details about the media file info."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(i.h3,{id:"media-clip-was-requested",children:"Media Clip was Requested"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'{\n  "type": "media",\n  "event": "processing",\n  "timestamp": 1725259930753,\n  "data": {\n    "mediaAssetId": "c6631104197a4091943775697948adbe",\n    "tokenId": 1187282,\n    "streamName": "test-record-clip",\n    "streamId": "dkxfvY/test-record-clip",\n    "startTime": 1725259930643,\n    "type": "clip",\n    "metadata": {},\n    "expiration": 1733900336143\n  }\n}\n'})}),"\n",(0,s.jsx)(i.h3,{id:"media-clip-is-available",children:"Media Clip is Available"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'{\n  "type": "media",\n  "event": "completed",\n  "timestamp": 1725260343575,\n  "data": {\n    "mediaAssetId": "e0ca421e3ee748629d073b6991d4d93d",\n    "tokenId": 1187282,\n    "streamName": "test-record-clip",\n    "streamId": "dkxfvY/test-record-clip",\n    "startTime": 1725259874671,\n    "metadata": {},\n    "type": "clip",\n    "expiration": 1733900336143\n  }\n}\n'})}),"\n",(0,s.jsx)(i.h3,{id:"error-when-recording",children:"Error When Recording"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-json",children:'{\n  "type": "media",\n  "event": "errored",\n  "timestamp": 1725261092922,\n  "data": {\n    "mediaAssetId": "f26120d4443b474b8b1d6e1ecfcbd369",\n    "tokenId": 1090418,\n    "streamName": "qa_test_stream_for_live_clipping",\n    "streamId": "dkxfvY/qa_test_stream_for_live_clipping",\n    "startTime": 1725245888000,\n    "type": "recording",\n    "expiration": 1733896321029\n  }\n}\n'})})]})}function h(e={}){let{wrapper:i}={...(0,a.a)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},250065:function(e,i,n){n.d(i,{Z:()=>o,a:()=>r});var t=n(667294);let s={},a=t.createContext(s);function r(e){let i=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:i},e.children)}},364575:function(e){e.exports=JSON.parse('{"id":"webhooks/media","title":"Media Hooks","description":"The media type of webhook allows you to receive a series of notifications for when a recording or live clip changes status. This can be helpful for when you want to automate the download or notifications for when media becomes available.","source":"@site/millicast/webhooks/media.md","sourceDirName":"webhooks","slug":"/webhooks/media","permalink":"/documentation/pr-preview/pr-365/millicast/webhooks/media","draft":false,"unlisted":false,"editUrl":"https://github.com/THEOplayer/documentation/blob/-/millicast/webhooks/media.md","tags":[],"version":"current","frontMatter":{"title":"Media Hooks"},"sidebar":"millicast","previous":{"title":"Feeds Hooks","permalink":"/documentation/pr-preview/pr-365/millicast/webhooks/feeds"},"next":{"title":"Thumbnail Hooks","permalink":"/documentation/pr-preview/pr-365/millicast/webhooks/thumbnail"}}')}}]);