"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["48064"],{20342:function(e,t,r){r.r(t),r.d(t,{default:()=>R,frontMatter:()=>g,metadata:()=>i,assets:()=>T,toc:()=>y,contentTitle:()=>f});var i=JSON.parse('{"id":"api/transcoder-get-transcoder","title":"Get Transcoder","description":"Returns the configuration of a Transcoder and any individual host instances for the given transcoderId.","source":"@site/millicast/api/transcoder-get-transcoder.api.mdx","sourceDirName":"api","slug":"/api/transcoder-get-transcoder","permalink":"/documentation/pr-preview/pr-299/millicast/api/transcoder-get-transcoder","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"transcoder-get-transcoder","title":"Get Transcoder","description":"Returns the configuration of a Transcoder and any individual host instances for the given transcoderId.","sidebar_label":"Get Transcoder","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"get api-method","info_path":"millicast/api/millicast-api","custom_edit_url":null,"hide_send_button":true},"sidebar":"millicastApi","previous":{"title":"Stream Details","permalink":"/documentation/pr-preview/pr-299/millicast/api/monitoring-get-stream"},"next":{"title":"Update Transcoder","permalink":"/documentation/pr-preview/pr-299/millicast/api/transcoder-update-transcoder"}}'),s=r("85893"),a=r("50065"),n=r("72969"),o=r.n(n),d=r("11682"),c=r.n(d),p=r("99757"),l=r.n(p),u=r("6476"),m=r.n(u);r("9650"),r("97645");var h=r("46055");let g={id:"transcoder-get-transcoder",title:"Get Transcoder",description:"Returns the configuration of a Transcoder and any individual host instances for the given transcoderId.",sidebar_label:"Get Transcoder",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"millicast/api/millicast-api",custom_edit_url:null,hide_send_button:!0},f=void 0,T={},y=[];function b(e){let t={p:"p",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"Get Transcoder"}),"\n",(0,s.jsx)(o(),{method:"get",path:"/api/transcoders/{transcoderId}",context:"endpoint"}),"\n",(0,s.jsx)(t.p,{children:"Returns the configuration of a Transcoder and any individual host instances for the given transcoderId."}),"\n",(0,s.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,s.jsx)(c(),{parameters:[{name:"transcoderId",in:"path",required:!0,description:"The unique identifier for the transcoder.",schema:{type:"string"},"x-position":1}]}),"\n",(0,s.jsx)(l(),{title:"Body",body:void 0}),"\n",(0,s.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",additionalProperties:!1,required:["status","data"],properties:{status:{type:"string",default:"success",minLength:1},data:{type:"object",additionalProperties:!1,properties:{transcoderId:{type:"string",description:"A unique identifier for a transcoder."},name:{type:"string",description:"A label to help distinguish between multiple transcoders."},cluster:{type:"string",description:"The cluster region used as the origin for ingesting the source stream."},dnsName:{type:"string",description:"A DNS record for routing to the transcode server. It follows the pattern: `dnsPrefix`-`accountId`.transcoder.millicast.com."},profile:{description:"Configuration for the output stream from the Transcoder. This may be a pre-defined profile or derived from custom resolution and frame rate settings.",oneOf:[{type:"object",additionalProperties:!1,properties:{profileId:{type:"string",description:"A unique identifier for the profile configuration."},name:{type:"string",description:"Name of the profile."},description:{type:"string",description:"Description to identify the purpose of the profile."},height:{type:"integer",description:"The maximum height to use for the frame resolution."},frameRate:{type:"integer",description:"The targeted frames per second."},passThrough:{type:"boolean",description:"Indicates that the top layer is used as is and bypasses transcoding without additional processing."},layers:{type:"array",description:"The layers the Transcoder will produce for distribution. These values are pre-determined following the Millicast bitrate ladder as step-down layers from the overall Transcoder configuration.",items:{type:"object",additionalProperties:!1,properties:{height:{type:"integer",description:"The height for this layer.",format:"int32",nullable:!0},width:{type:"integer",description:"The width for this layer.",format:"int32",nullable:!0},fps:{type:"integer",description:"The target frames-per-second for this layer.",format:"int32",nullable:!0},codec:{type:"string",description:"The codec used for this layer."},bitrate:{type:"integer",description:"The target bitrate for this layer.",format:"int32",nullable:!0},intraPeriod:{type:"integer",description:"The I-Frame interval for this layer.",format:"int32",nullable:!0}},title:"TranscoderProfileLayer"}}},title:"ProfileResponse"}]},createdOn:{type:"string",description:"A timestamp for when this Transcoder was created.",format:"date-time"},endedOn:{type:"string",description:"A timestamp for when this Transcoder was shutdown.",format:"date-time",nullable:!0},instance:{description:"Information on the most recent transcoder instance. The transcoder may run multiple instances to support the scale of the broadcast streams.",nullable:!0,oneOf:[{type:"object",additionalProperties:!1,properties:{transcoderId:{type:"string",description:"The unique identifier of the Transcoder."},id:{type:"string",description:"The unique identifier for this instance of the Transcoder."},publicIp:{type:"string",description:"The public IP address for the host that is processing the stream."},dnsName:{type:"string",description:"A DNS record for routing to the transcoder instance server(s). It follows the pattern: `dnsPrefix`-`accountId`.transcoder.millicast.com."},createdOn:{type:"string",description:"A timestamp for when this Transcoder instance was created.",format:"date-time"},endedOn:{type:"string",description:"A timestamp for when this Transcoder instance was shutdown.",format:"date-time",nullable:!0},status:{description:"The status for this Transcoder instance.",oneOf:[{type:"string",description:"","x-enumNames":["Provisioning","Active","Error","Shutdown","Deleted","ShuttingDown","Deleting","Queued","ActiveError","ShutdownError","DeletingError"],enum:["Provisioning","Active","Error","Shutdown","Deleted","ShuttingDown","Deleting","Queued","ActiveError","ShutdownError","DeletingError"],title:"InstanceStatus"}]}},title:"InstanceResponse"}]},status:{description:"The status for this Transcoder.",oneOf:[{type:"string",description:"","x-enumNames":["Provisioning","Active","Error","Shutdown","Deleted","ShuttingDown","Deleting","Queued"],enum:["Provisioning","Active","Error","Shutdown","Deleted","ShuttingDown","Deleting","Queued"],title:"TranscoderDisplayStatus"}]},publishUrls:{description:"The discrete ingest URLs for each broadcast protocol (RTMP, RTMPS, SRT).",oneOf:[{type:"object",additionalProperties:!1,properties:{rtmp:{type:"string"},rtmps:{type:"string"},srt:{type:"string"}},title:"PublishUrlsResponse"}]}},title:"RecordResponse"}},title:"SuccessResponseTranscoderRecord"},examples:{simple:{summary:"simple",value:{status:"success",data:{transcoderId:"abcd-efgh",name:"simple_transcoder",cluster:"phx-1",dnsName:"abcd-efgh-ijkl.transcoder.millicast.com",profile:{profileId:"simple_profile",name:"simple profile",description:"simple profile",height:240,frameRate:60,passThrough:!0,layers:[{height:240,fps:24,codec:"h264",bitrate:350,intraPeriod:24}]},createdOn:"2024-02-08T04:55:48.449Z",instance:{id:"mnop-qrst",publicIp:"123.45.67.89",dnsName:"abcd-efgh-ijkl.transcoder.millicast.com",createdOn:"2024-02-08T04:55:48.449Z",status:"Active"},status:"Active",publishUrls:{rtmp:"rtmp://abcd-efgh-ijkl.transcoder.millicast.com:1935/v2/pub",rtmps:"rtmps://abcd-efgh-ijkl.transcoder.millicast.com:443/v2/pub",srt:"srt://abcd-efgh-ijkl.transcoder.millicast.com:10000"}}}}}}}},400:{description:"Bad Request",content:{"application/json":{schema:{type:"object",additionalProperties:!1,required:["status","data"],properties:{status:{type:"string",default:"fail",minLength:1},data:{}},title:"FailResponse"}}}},default:{description:"Server Error",content:{"application/json":{schema:{type:"object",additionalProperties:!1,required:["status","message"],properties:{status:{type:"string",default:"error",minLength:1},message:{type:"string",minLength:1},code:{type:"integer",format:"int32",nullable:!0},data:{nullable:!0}},title:"ErrorResponse"},examples:{general:{summary:"general",value:{status:"error",message:"simple error reason",code:500,data:{additional:"other data here (not actual key)"}}}}}}}}})]})}function R(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}}}]);