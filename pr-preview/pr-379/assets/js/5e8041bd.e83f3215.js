"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["69792"],{385515:function(e,t,n){n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var i=n(818809),a=n(785893),o=n(250065);let l={title:"Localization",description:"Learn how to localize the THEOplayer UI!",sidebar_position:2,sidebar_custom_props:{icon:"\uD83C\uDF0D"},slug:"/react-native/localization"},r="Localization",c={},s=[{value:"Example",id:"example",level:2}];function p(e){let t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"localization",children:"Localization"})}),"\n",(0,a.jsxs)(t.p,{children:["The React Native UI package supports full localization, allowing you to customize UI text to match the language and tone of your application. You can override default labels\u2014such as menu titles, button text, and indicators\u2014by supplying your own translations using the ",(0,a.jsx)(t.code,{children:"localization"})," prop."]}),"\n",(0,a.jsx)(t.p,{children:"This is especially useful for building internationalized apps or tailoring the viewing experience for a specific audience."}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.p,{children:"Here's a simple example that sets Dutch translations for several UI elements:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:"const App = () => {\n  const myCustomLocale: Partial<Locale> = {\n    backButton: 'Terug',\n    settingsTitle: 'Instellingen',\n    qualityTitle: 'Videokwaliteit',\n    audioTitle: 'Taal',\n    subtitleTitle: 'Ondertitels',\n    playbackRateTitle: 'Afspeelsnelheid',\n    liveLabel: 'LIVE',\n    // For a full list of available keys, see the Localization interface.\n  };\n  return (\n    <THEOplayerDefaultUi\n      style={StyleSheet.absoluteFill}\n      config={playerConfig}\n      locale={myCustomLocale}\n    />\n  );\n};\n"})})]})}function u(e={}){let{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},250065:function(e,t,n){n.d(t,{Z:()=>r,a:()=>l});var i=n(667294);let a={},o=i.createContext(a);function l(e){let t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(o.Provider,{value:t},e.children)}},818809:function(e){e.exports=JSON.parse('{"id":"external/react-native-theoplayer-ui/doc/localization","title":"Localization","description":"Learn how to localize the THEOplayer UI!","source":"@site/open-video-ui/external/react-native-theoplayer-ui/doc/localization.md","sourceDirName":"external/react-native-theoplayer-ui/doc","slug":"/react-native/localization","permalink":"/documentation/pr-preview/pr-379/open-video-ui/react-native/localization","draft":false,"unlisted":false,"editUrl":"https://github.com/THEOplayer/react-native-theoplayer-ui/blob/-/doc/localization.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Localization","description":"Learn how to localize the THEOplayer UI!","sidebar_position":2,"sidebar_custom_props":{"icon":"\uD83C\uDF0D"},"slug":"/react-native/localization"},"sidebar":"react-native","previous":{"title":"Getting started","permalink":"/documentation/pr-preview/pr-379/open-video-ui/react-native/getting-started"},"next":{"title":"Limitations and Known Issues","permalink":"/documentation/pr-preview/pr-379/open-video-ui/react-native/limitations"}}')}}]);