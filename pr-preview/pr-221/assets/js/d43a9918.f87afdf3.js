"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["65421"],{16536:function(e,t,n){n.r(t),n.d(t,{default:()=>d,frontMatter:()=>o,metadata:()=>r,assets:()=>l,toc:()=>c,contentTitle:()=>s});var r=JSON.parse('{"id":"playout-configuration/security-per-channel-per-alias/token-based-security","title":"Token based security","description":"THEOlive offers the option to enable JWT token security on channel alias level. This can be interesting if you only want valid users to access your stream.","source":"@site/theolive/playout-configuration/security-per-channel-per-alias/token-based-security.mdx","sourceDirName":"playout-configuration/security-per-channel-per-alias","slug":"/playout-configuration/security-per-channel-per-alias/token-based-security","permalink":"/documentation/pr-preview/pr-221/theolive/playout-configuration/security-per-channel-per-alias/token-based-security","draft":false,"unlisted":false,"editUrl":"https://github.com/THEOplayer/documentation/blob/-/theolive/playout-configuration/security-per-channel-per-alias/token-based-security.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"theolive","previous":{"title":"Geo-blocking","permalink":"/documentation/pr-preview/pr-221/theolive/playout-configuration/security-per-channel-per-alias/geo-blocking"},"next":{"title":"THEOlive playback","permalink":"/documentation/pr-preview/pr-221/theolive/theo-live-playback"}}'),a=n("85893"),i=n("50065");let o={},s="Token based security",l={},c=[{value:"How it works",id:"how-it-works",level:2},{value:"Enable or disable token security for an alias",id:"enable-or-disable-token-security-for-an-alias",level:2},{value:"1. Create a header provider",id:"1-create-a-header-provider",level:3},{value:"2. Pass the header provider to the THEOplayer",id:"2-pass-the-header-provider-to-the-theoplayer",level:3}];function h(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"token-based-security",children:"Token based security"})}),"\n",(0,a.jsx)(t.p,{children:"THEOlive offers the option to enable JWT token security on channel alias level. This can be interesting if you only want valid users to access your stream."}),"\n",(0,a.jsx)(t.p,{children:"In this document, we will"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"explain how it works"}),"\n",(0,a.jsx)(t.li,{children:"how to enable/disable it via the console and API"}),"\n",(0,a.jsx)(t.li,{children:"how to configure your THEOlive player to pass the mandatory headers"}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,a.jsxs)(t.p,{children:["When enabling token security on a channel alias, we expect you to share the shared (private) key in case of HS256/HS512 or the public key in case of RS256/RS512 encryption. This will be used on CDN level to determine if a request (with a Bearer token passed in the ",(0,a.jsx)(t.code,{children:"Authorization"})," header) is valid or not. It's up to you to configure this header correctly through our ",(0,a.jsx)(t.a,{href:"https://www.npmjs.com/package/@theolive/player",children:"THEOlive npm player"}),". Later in this document we will explain how."]}),"\n",(0,a.jsx)(t.p,{children:"In the bearer token that gets sent to us, we expect the following properties to be available:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"exp"}),": date in epoch format until which the JWT token is valid"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"nbf"}),': optional date in epoch format. Stands for "not before" and acts as a "start date" of the JWT to be valid.']}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"When not passing a bearer token for a secured channel, the request will be rejected."}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"token based security",src:n(26259).Z+"",width:"720",height:"306"})}),"\n",(0,a.jsx)(t.h2,{id:"enable-or-disable-token-security-for-an-alias",children:"Enable or disable token security for an alias"}),"\n",(0,a.jsxs)(t.p,{children:["Please refer to the ",(0,a.jsx)(t.a,{href:"https://developers.theo.live/reference/enable-token-security-for-alias",children:"Enable token security for alias"})," and ",(0,a.jsx)(t.a,{href:"https://developers.theo.live/reference/disable-token-security-for-alias",children:"Disable token security for alias"})," API endpoints to manage the token security settings for an alias."]}),"\n",(0,a.jsxs)(t.p,{children:["When enabling for the first time, you have to pass the ",(0,a.jsx)(t.code,{children:"key"})," property in the body. If you disable token security later on, and make it active again, you can omit this property if it should stay the same."]}),"\n",(0,a.jsx)(t.p,{children:"If you're using the THEOlive management console, you can navigate to a player details page and select the alias you want to enable/disable token security for. When enabling, please pass the correct shared or public key to use. Don't forget to confirm your changes by hitting the save button!"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Managing token security in the console",src:n(85667).Z+"",width:"1323",height:"770"})}),"\n",(0,a.jsx)(t.h3,{id:"1-create-a-header-provider",children:"1. Create a header provider"}),"\n",(0,a.jsxs)(t.p,{children:["First thing to do is to create a header provider function. In this function you add the ",(0,a.jsx)(t.code,{children:"Authorization"})," header which contains a bearer token generated by you. This token should at least contain a ",(0,a.jsx)(t.code,{children:"exp"})," property, and an optional ",(0,a.jsx)(t.code,{children:"nbf"})," property. You can add as many other properties to it as you want, but THEOlive doesn't do anything with them."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",metastring:"Creating header provider",children:"const headerProvider = (url) => {\n  return new Headers({\n    Authorization: 'Bearer <token-generated-by-you>',\n  });\n};\n"})}),"\n",(0,a.jsx)(t.h3,{id:"2-pass-the-header-provider-to-the-theoplayer",children:"2. Pass the header provider to the THEOplayer"}),"\n",(0,a.jsxs)(t.p,{children:["To attach the ",(0,a.jsx)(t.code,{children:"headerProvider"})," to THEOplayer - please see our ",(0,a.jsx)(t.a,{href:"../../../../theoplayer/how-to-guides/network/request-response-interceptors/",children:"guide"})," on how to intercept requests and setting header interceptors on THEOplayer."]})]})}function d(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},85667:function(e,t,n){n.d(t,{Z:function(){return r}});let r=n.p+"assets/images/51376b6-token-d85cdc1dbfb111642fa9b7f764b921e6.png"},26259:function(e,t,n){n.d(t,{Z:function(){return r}});let r=n.p+"assets/images/dcdfc37-token_security-198f04847aec73ad4f237ac1e8c7c650.png"},50065:function(e,t,n){n.d(t,{Z:function(){return s},a:function(){return o}});var r=n(67294);let a={},i=r.createContext(a);function o(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);