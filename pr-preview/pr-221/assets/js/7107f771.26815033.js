"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["59774"],{80503:function(e,t,o){o.r(t),o.d(t,{default:()=>p,frontMatter:()=>i,metadata:()=>n,assets:()=>l,toc:()=>s,contentTitle:()=>d});var n=JSON.parse('{"id":"theolive-through-npm/extended-features/bad-network-mode","title":"Bad network mode","description":"Available on npm v2.6.0 and up","source":"@site/theolive/theolive-through-npm/extended-features/bad-network-mode.md","sourceDirName":"theolive-through-npm/extended-features","slug":"/theolive-through-npm/extended-features/bad-network-mode","permalink":"/documentation/pr-preview/pr-221/theolive/theolive-through-npm/extended-features/bad-network-mode","draft":false,"unlisted":false,"editUrl":"https://github.com/THEOplayer/documentation/blob/-/theolive/theolive-through-npm/extended-features/bad-network-mode.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"theolive","previous":{"title":"Player API details","permalink":"/documentation/pr-preview/pr-221/theolive/theolive-through-npm/player-api-details"},"next":{"title":"Pre-roll ads","permalink":"/documentation/pr-preview/pr-221/theolive/theolive-through-npm/extended-features/pre-roll-ads"}}'),r=o("85893"),a=o("50065");let i={sidebar_position:1},d="Bad network mode",l={},s=[];function h(e){let t={admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"bad-network-mode",children:"Bad network mode"})}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsx)(t.p,{children:"Available on npm v2.6.0 and up"})}),"\n",(0,r.jsxs)(t.p,{children:["The ABR algorithm works best on qualities of 800 kbit/s or more. For advanced use cases, one might want qualities with a lower bitrate. Therefore we added a bad network mode to the player that activates for ABR ladders containing these very low bitrate qualities. By default, these qualities are not selected by the ABR algorithm to ensure a optimal ABR experience. However, if the player detects that it really isn't possible to play the higher bitrate qualities it will select a very low bitrate quality. This is called entering bad network mode and is signaled by the ",(0,r.jsx)(t.code,{children:"badNetworkMode"})," property transitioning to true accompanied by a ",(0,r.jsx)(t.code,{children:"enterbadnetworkmode"})," event. If this happens, we can provide no guarantees that the ABR algorithm will be able to switch up in the future. Therefore, we expect a explicit call by the user to exit bad network mode by setting the ",(0,r.jsx)(t.code,{children:"badNetworkMode"})," property back to false. This will also result in a ",(0,r.jsx)(t.code,{children:"exitbadnetworkmode"})," event. If it does happen that the ABR algorithm is able to detect enough bandwidth to switch up, the player automatically exits bad network mode and updates the property and dispatches the event."]})]})}function p(e={}){let{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},50065:function(e,t,o){o.d(t,{Z:function(){return d},a:function(){return i}});var n=o(67294);let r={},a=n.createContext(r);function i(e){let t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);