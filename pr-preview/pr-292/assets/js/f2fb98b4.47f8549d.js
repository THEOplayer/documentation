"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([["66246"],{62621:function(e,t,r){r.r(t),r.d(t,{default:()=>R,frontMatter:()=>f,metadata:()=>i,assets:()=>y,toc:()=>b,contentTitle:()=>g});var i=JSON.parse('{"id":"api/transcoder-list-transcoders","title":"List Transcoders","description":"Return the Transcoders that have been configured for your account. You can use query parameters to filter, sort, or paginate the results returned.","source":"@site/millicast/api/transcoder-list-transcoders.api.mdx","sourceDirName":"api","slug":"/api/transcoder-list-transcoders","permalink":"/documentation/pr-preview/pr-292/millicast/api/transcoder-list-transcoders","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"transcoder-list-transcoders","title":"List Transcoders","description":"Return the Transcoders that have been configured for your account. You can use query parameters to filter, sort, or paginate the results returned.","sidebar_label":"List Transcoders","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"get api-method","info_path":"millicast/api/millicast-api","custom_edit_url":null,"hide_send_button":true},"sidebar":"millicastApi","previous":{"title":"Create Transcoder","permalink":"/documentation/pr-preview/pr-292/millicast/api/transcoder-create-transcoder"},"next":{"title":"Start Transcoder","permalink":"/documentation/pr-preview/pr-292/millicast/api/transcoder-start-transcoder"}}'),s=r("85893"),n=r("50065"),a=r("72969"),o=r.n(a),c=r("11682"),d=r.n(c),l=r("99757"),p=r.n(l),u=r("6476"),m=r.n(u);r("9650"),r("97645");var h=r("46055");let f={id:"transcoder-list-transcoders",title:"List Transcoders",description:"Return the Transcoders that have been configured for your account. You can use query parameters to filter, sort, or paginate the results returned.",sidebar_label:"List Transcoders",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"millicast/api/millicast-api",custom_edit_url:null,hide_send_button:!0},g=void 0,y={},b=[];function T(e){let t={p:"p",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"List Transcoders"}),"\n",(0,s.jsx)(o(),{method:"get",path:"/api/transcoders",context:"endpoint"}),"\n",(0,s.jsx)(t.p,{children:"Return the Transcoders that have been configured for your account. You can use query parameters to filter, sort, or paginate the results returned."}),"\n",(0,s.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,s.jsx)(d(),{parameters:[{name:"sortBy",in:"query",description:"Order in which to return the list of Transcoders. The default is by CreatedDate.",schema:{default:"CreatedDate",nullable:!0,oneOf:[{type:"string",description:"","x-enumNames":["CreatedDate","TranscoderName"],enum:["CreatedDate","TranscoderName"],title:"ListTranscoderRecordsSortBy"}]},"x-position":1},{name:"status",in:"query",style:"form",explode:!0,description:"Returns only Transcoders that match the given status. If empty, will return all but Deleted.",schema:{type:"array",nullable:!0,items:{type:"string",description:"","x-enumNames":["Provisioning","Active","Error","Shutdown","Deleted","ShuttingDown","Deleting","Queued"],enum:["Provisioning","Active","Error","Shutdown","Deleted","ShuttingDown","Deleting","Queued"],title:"TranscoderDisplayStatus"}},"x-position":2},{name:"cluster",in:"query",style:"form",explode:!0,description:"Returns only Transcoders for the given cluster(s).",schema:{type:"array",nullable:!0,items:{type:"string"}},"x-position":3},{name:"transcoderName",in:"query",description:"Returns only Transcoders that match the given string. Will include partial sub-string matches.",schema:{type:"string",nullable:!0},"x-position":4},{name:"page",in:"query",required:!0,description:"The index to start when paginating results.",schema:{type:"integer",format:"int32",maximum:0x7fffffff,minimum:1},"x-position":5},{name:"itemsOnPage",in:"query",required:!0,description:"The number of results to include when paginating a large result set.",schema:{type:"integer",format:"int32",maximum:100,minimum:1},"x-position":6},{name:"isDescending",in:"query",description:"Change the direction of the default sort ordering.",schema:{type:"boolean",default:!1},"x-position":7}]}),"\n",(0,s.jsx)(p(),{title:"Body",body:void 0}),"\n",(0,s.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"Success",content:{"application/json":{schema:{type:"object",additionalProperties:!1,required:["status","data"],properties:{status:{type:"string",default:"success",minLength:1},data:{type:"array",items:{type:"object",additionalProperties:!1,properties:{transcoderId:{type:"string",description:"A unique identifier for a transcoder."},name:{type:"string",description:"A label to help distinguish between multiple transcoders."},cluster:{type:"string",description:"The cluster region used as the origin for ingesting the source stream."},dnsName:{type:"string",description:"A DNS record for routing to the transcode server. It follows the pattern: `dnsPrefix`-`accountId`.transcoder.millicast.com."},profile:{description:"Configuration for the output stream from the Transcoder. This may be a pre-defined profile or derived from custom resolution and frame rate settings.",oneOf:[{type:"object",additionalProperties:!1,properties:{profileId:{type:"string",description:"A unique identifier for the profile configuration."},name:{type:"string",description:"Name of the profile."},description:{type:"string",description:"Description to identify the purpose of the profile."},height:{type:"integer",description:"The maximum height to use for the frame resolution."},frameRate:{type:"integer",description:"The targeted frames per second."},passThrough:{type:"boolean",description:"Indicates that the top layer is used as is and bypasses transcoding without additional processing."},layers:{type:"array",description:"The layers the Transcoder will produce for distribution. These values are pre-determined following the Millicast bitrate ladder as step-down layers from the overall Transcoder configuration.",items:{type:"object",additionalProperties:!1,properties:{height:{type:"integer",description:"The height for this layer.",format:"int32",nullable:!0},width:{type:"integer",description:"The width for this layer.",format:"int32",nullable:!0},fps:{type:"integer",description:"The target frames-per-second for this layer.",format:"int32",nullable:!0},codec:{type:"string",description:"The codec used for this layer."},bitrate:{type:"integer",description:"The target bitrate for this layer.",format:"int32",nullable:!0},intraPeriod:{type:"integer",description:"The I-Frame interval for this layer.",format:"int32",nullable:!0}},title:"TranscoderProfileLayer"}}},title:"ProfileResponse"}]},createdOn:{type:"string",description:"A timestamp for when this Transcoder was created.",format:"date-time"},endedOn:{type:"string",description:"A timestamp for when this Transcoder was shutdown.",format:"date-time",nullable:!0},instance:{description:"Information on the most recent transcoder instance. The transcoder may run multiple instances to support the scale of the broadcast streams.",nullable:!0,oneOf:[{type:"object",additionalProperties:!1,properties:{transcoderId:{type:"string",description:"The unique identifier of the Transcoder."},id:{type:"string",description:"The unique identifier for this instance of the Transcoder."},publicIp:{type:"string",description:"The public IP address for the host that is processing the stream."},dnsName:{type:"string",description:"A DNS record for routing to the transcoder instance server(s). It follows the pattern: `dnsPrefix`-`accountId`.transcoder.millicast.com."},createdOn:{type:"string",description:"A timestamp for when this Transcoder instance was created.",format:"date-time"},endedOn:{type:"string",description:"A timestamp for when this Transcoder instance was shutdown.",format:"date-time",nullable:!0},status:{description:"The status for this Transcoder instance.",oneOf:[{type:"string",description:"","x-enumNames":["Provisioning","Active","Error","Shutdown","Deleted","ShuttingDown","Deleting","Queued","ActiveError","ShutdownError","DeletingError"],enum:["Provisioning","Active","Error","Shutdown","Deleted","ShuttingDown","Deleting","Queued","ActiveError","ShutdownError","DeletingError"],title:"InstanceStatus"}]}},title:"InstanceResponse"}]},status:{description:"The status for this Transcoder.",oneOf:[{type:"string",description:"","x-enumNames":["Provisioning","Active","Error","Shutdown","Deleted","ShuttingDown","Deleting","Queued"],enum:["Provisioning","Active","Error","Shutdown","Deleted","ShuttingDown","Deleting","Queued"],title:"TranscoderDisplayStatus"}]},publishUrls:{description:"The discrete ingest URLs for each broadcast protocol (RTMP, RTMPS, SRT).",oneOf:[{type:"object",additionalProperties:!1,properties:{rtmp:{type:"string"},rtmps:{type:"string"},srt:{type:"string"}},title:"PublishUrlsResponse"}]}},title:"RecordResponse"}}},title:"SuccessResponseListTranscoderRecords"},examples:{simple:{summary:"simple",value:{status:"success",data:[{transcoderId:"abcd-efgh",name:"simple_transcoder",cluster:"phx-1",dnsName:"abcd-efgh-ijkl.transcoder.millicast.com",profile:{profileId:"simple_profile",name:"simple profile",description:"simple profile",height:240,frameRate:60,passThrough:!0,layers:[{height:240,fps:24,codec:"h264",bitrate:350,intraPeriod:24}]},createdOn:"2024-02-08T04:55:48.449Z",instance:{id:"mnop-qrst",publicIp:"123.45.67.89",dnsName:"abcd-efgh-ijkl.transcoder.millicast.com",createdOn:"2024-02-08T04:55:48.449Z",status:"Active"},status:"Active",publishUrls:{rtmp:"rtmp://abcd-efgh-ijkl.transcoder.millicast.com:1935/v2/pub",rtmps:"rtmps://abcd-efgh-ijkl.transcoder.millicast.com:443/v2/pub",srt:"srt://abcd-efgh-ijkl.transcoder.millicast.com:10000"}},{transcoderId:"abcd-efgh",name:"simple_transcoder",cluster:"phx-1",dnsName:"abcd-efgh-ijkl.transcoder.millicast.com",profile:{profileId:"simple_profile",name:"simple profile",description:"simple profile",height:240,frameRate:60,passThrough:!0,layers:[{height:240,fps:24,codec:"h264",bitrate:350,intraPeriod:24}]},createdOn:"2024-02-08T04:55:48.449Z",endedOn:"2024-02-08T04:55:48.449Z",instance:{id:"mnop-qrst",dnsName:"abcd-efgh-ijkl.transcoder.millicast.com",createdOn:"2024-02-08T04:55:48.449Z",status:"Provisioning"},publishUrls:{rtmp:"rtmp://abcd-efgh-ijkl.transcoder.millicast.com:1935/v2/pub",rtmps:"rtmps://abcd-efgh-ijkl.transcoder.millicast.com:443/v2/pub",srt:"srt://abcd-efgh-ijkl.transcoder.millicast.com:10000"},status:"Provisioning"}]}}}}}},400:{description:"Bad Request",content:{"application/json":{schema:{type:"object",additionalProperties:!1,required:["status","data"],properties:{status:{type:"string",default:"fail",minLength:1},data:{}},title:"FailResponse"}}}},default:{description:"Server Error",content:{"application/json":{schema:{type:"object",additionalProperties:!1,required:["status","message"],properties:{status:{type:"string",default:"error",minLength:1},message:{type:"string",minLength:1},code:{type:"integer",format:"int32",nullable:!0},data:{nullable:!0}},title:"ErrorResponse"},examples:{general:{summary:"general",value:{status:"error",message:"simple error reason",code:500,data:{additional:"other data here (not actual key)"}}}}}}}}})]})}function R(e={}){let{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(T,{...e})}):T(e)}}}]);